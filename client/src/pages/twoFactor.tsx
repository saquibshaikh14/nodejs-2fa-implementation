import { extendedToast as toast } from '../utils/toast';
import { useAuth } from "../context/auth-context";
import { useState } from "react";
import { ActionButton } from '../components';

const TwoFactorPage = () => {

    const { isAuthenticated, user, handle2FA } = useAuth();
    const show2FAEnable = isAuthenticated && user && user.twoFAStatus === "required" && !user.twoFactorEnabled;
    const show2FASetup = isAuthenticated && user && user.twoFAStatus === "setup" && !user.twoFactorEnabled;


    const [totp, setTotp] = useState("");
    const [error, setError] = useState("");
    const [qrCodeUrl, setQrCodeUrl] = useState<string>("");
    const [isLoading, setLoading] = useState<boolean>(false);

    const handleTOTPChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const value = e.target.value;

        // Allow only numbers and limit to 6 characters
        if (/^\d{0,6}$/.test(value)) {
            setTotp(value);
            setError(""); // Clear error on valid input
        } else {
            setError("TOTP must be a 6-digit number.");
        }
    };

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();

        if (totp.length !== 6) {
            setError("TOTP must be exactly 6 digits.");
            return;
        }

        setLoading(true);

        const response = await handle2FA('verify', totp);
        if (response.status === "error") {
            toast.error(response.message, { id: "2fa-totp" });
        }

        setLoading(false);
    };

    const handleAction = async (e: React.SyntheticEvent<HTMLButtonElement>) => {
        const action = e.currentTarget.getAttribute("data-action") as TwoFAClient.TwoFaAction;
        if (!action || typeof action !== 'string') {
            return;
        }

        setLoading(true);

        const response = await handle2FA(action, '');

        setLoading(false);
        if (response.status === "error") {
            toast.error(response.message, { id: "2fa-totp" });
        }
        if (response.status === "success" && response.data?.twoFAStatus === "setup") {
            setQrCodeUrl(response.data.qrCodeUrl)
        }

    }

    return (
        <div className="bg-gray-100 min-h-screen flex items-center justify-center px-6">
            {show2FAEnable && (
                <div className="w-full max-w-md bg-white text-gray-800 rounded-lg shadow-lg p-6 space-y-6">
                    <h1 className="text-2xl font-bold text-blue-600">Two-Factor Authentication Setup</h1>
                    <p className="text-gray-600">
                        Secure your account by enabling Two-Factor Authentication (2FA). It provides an extra layer of security to protect your account.
                    </p>
                    <button className={`${isLoading ? 'cursor-not-allowed' : ''} w-full py-2 bg-blue-500 hover:bg-blue-600 text-white font-semibold rounded-lg transition-all`} data-action="enable" onClick={handleAction} disabled={isLoading}>
                        Enable 2FA
                    </button>
                    <button className={`${isLoading ? 'cursor-not-allowed' : ''} w-full py-2 bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold rounded-lg transition-all`} data-action="skip" onClick={handleAction} disabled={isLoading}>
                        Skip for Now
                    </button>
                </div>
            )}

            {show2FASetup && (
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-[50rem]">
                    {/* Left side: QR Code */}
                    <div className="bg-white p-6 rounded-lg space-y-4 shadow-lg">
                        <h2 className="text-lg font-bold text-blue-600">Step 1: Scan the QR Code</h2>
                        <p className="text-gray-600">Scan the QR code with your authenticator app (e.g., Google Authenticator, Authy).</p>
                        <div className="flex justify-center items-center rounded-md">
                            {/* Replace this placeholder with the actual QR code */}
                            <img src={qrCodeUrl} className="w-36 h-36" alt="QR Code" />
                        </div>
                    </div>

                    {/* Right side: TOTP Input */}
                    <div className="bg-white p-6 rounded-lg space-y-4 shadow-lg">
                        <h2 className="text-lg font-bold text-blue-600">Step 2: Enter the 6-digit Code</h2>
                        <p className="text-gray-600">Enter the 6-digit code generated by your authenticator app to complete the setup.</p>
                        <form onSubmit={handleSubmit} className="space-y-4">
                            <div>
                                <input
                                    type="text"
                                    value={totp}
                                    onChange={handleTOTPChange}
                                    placeholder="Enter 6-digit TOTP"
                                    className="w-full px-4 py-2 bg-gray-200 text-gray-800 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none"
                                />
                                {error && <p className="text-red-500 text-sm mt-2">{error}</p>}
                            </div>
                            <ActionButton text="Verify" isLoading={isLoading} type="submit" />
                        </form>
                    </div>
                </div>
            )}

            {!show2FAEnable && !show2FASetup && (
                <div className="w-full max-w-md bg-white text-gray-800 rounded-lg shadow-lg p-6 space-y-6">
                    <h1 className="text-2xl font-bold text-blue-600">Two-Factor Authentication</h1>
                    <p className="text-gray-600">Enter the 6-digit code sent to your authenticator app to verify your account.</p>
                    <form onSubmit={handleSubmit} className="space-y-4">
                        <div>
                            <input
                                type="text"
                                value={totp}
                                onChange={handleTOTPChange}
                                placeholder="Enter 6-digit TOTP"
                                className="w-full px-4 py-2 bg-gray-200 text-gray-800 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none"
                            />
                            {error && <p className="text-red-500 text-sm mt-2">{error}</p>}
                        </div>
                        <ActionButton type="submit" text="Verify" isLoading={isLoading} />
                    </form>
                </div>
            )}
        </div>
    );
};

export default TwoFactorPage;